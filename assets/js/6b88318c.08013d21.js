"use strict";(self.webpackChunkmaglev_training_github_io=self.webpackChunkmaglev_training_github_io||[]).push([[241],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return b}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(n),b=i,f=d["".concat(c,".").concat(b)]||d[b]||p[b]||o;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3632:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],u={sidebar_position:1},c="Authentication / Authorization",l={unversionedId:"back-end/auth",id:"back-end/auth",title:"Authentication / Authorization",description:"For now, I'm thinking we will use Github authentication. Eventually I'd like us to have our own OIDC/Oauth2 implementation, but I don't want to get side tracked with security yet.",source:"@site/docs/back-end/auth.md",sourceDirName:"back-end",slug:"/back-end/auth",permalink:"/docs/back-end/auth",editUrl:"https://github.com/maglev-training/maglev-training.github.io/blob/main/docs/back-end/auth.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Using NX",permalink:"/docs/front-end/using-nx"},next:{title:"Overview",permalink:"/docs/back-end/overview"}},s=[{value:"External Users",id:"external-users",children:[],level:2},{value:"Internals (Service Accounts)",id:"internals-service-accounts",children:[],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"authentication--authorization"},"Authentication / Authorization"),(0,o.kt)("p",null,"For ",(0,o.kt)("em",{parentName:"p"},"now"),", I'm thinking we will use Github authentication. Eventually I'd like us to have our own OIDC/Oauth2 implementation, but I don't want to get side tracked with security yet."),(0,o.kt)("h2",{id:"external-users"},"External Users"),(0,o.kt)("p",null,"Will create accounts by logging in with Github."),(0,o.kt)("h2",{id:"internals-service-accounts"},"Internals (Service Accounts)"),(0,o.kt)("p",null,'I considered using Azure AD for service-service communication, because it would have been easier, but I think using Kubernetes RBAC and principles will be the right way to go to stick with our "portable cloud native" guidance.'))}d.isMDXComponent=!0}}]);